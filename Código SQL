create database MascoTika

use MascoTika
	
create table usuario(
	usuario varchar (20) not null,
	contrasena varbinary (max) not null,
	rol varchar (20),
);

create proc sp_insert_usuario
@user varchar (max),
@pss varchar (max),
@key varchar (max),
@role varchar (max)
as
declare
@pssb varbinary(max)
begin
set @pssb=(ENCRYPTBYPASSPHRASE('encriptacion',@pss));
insert into usuario values (@user,@pssb, @role)
end

exec sp_insert_usuario '','','', '' --comando para cuando alguien se registre a la base de datos

create table Veterinario(
	identificador_vet varchar(10) not null,
	nombre_vet varchar (100) not null,
	provincia varchar (50) not null,
	canton varchar (50) not null,
	distrito varchar (50) not null,
	senas varchar (100),
	ubicacion varchar (500) not null,
	telefono int,
	correo varchar (100),
	sitio_web varchar (100),
	hora_inicio varchar (20) not null,
	hora_final varchar (20) not null,
	perfil varchar (500),
	calificacion int not null,
	primary key (identificador_vet)
);

create table categoria(
	nombre varchar (100) not null,
	codigo varchar(100) not null,
	descripcion varchar (100) not null,
	estado varchar (100) not null,
	primary key (codigo)
);

create table procedimiento(
		identificador_proc varchar(100) not null,
		nombre_proc varchar (50) not null,
		descripcion varchar (200) not null,
		tipo varchar (15) not null,
		estado varchar (20) not null,
		monto_unitario int not null,
		monto_domicilio int,
		foreign key(identificador_proc) references categoria(codigo),
);


create table cliente(
	nombre varchar (50) not null,
	cedula int not null,
	provincia varchar (50) not null,
	canton varchar (50) not null,
	distrito varchar (50) not null, 
	se√±as varchar (200),
	ubicacion varchar(500) not null,
	correo_electronico varchar (200) not null, 	
	numero int not null,
	primary key (nombre)
);

create table paciente(
	propietario varchar (50) not null,
	identificador_pac varchar (10) not null,
	raza varchar (50),
	nombre_pac varchar (50) not null,
	edad int not null,
	primary key (nombre_pac),
	foreign key (propietario) references cliente (nombre)
);

create table historial(
	identificacion varchar (10) not null,
	nombre varchar(50) not null,
	procedimiento varchar (100) not null,
	fecha varchar (100) not null,
	descripcion varchar (200),
	monto int,
	lugar varchar (100),
	diagnostico varchar (100),
	tratamiento varchar (500),
	foreign key (nombre) references paciente (nombre_pac),
	foreign key (identificacion) references veterinario (identificador_vet)
);
		
create table cita(
	usuario varchar(50) not null,
	correo varchar (100) not null,
	fecha varchar (100)not null,
	estado varchar(25) not null,
	tipo varchar (10) not null,
	foreign key (usuario) references cliente(nombre)
);
